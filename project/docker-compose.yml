version: "3"

services:
  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8090:8080"
    deploy:
      mode: replicated
      replicas: 1
  
  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8091:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5" 
    depends_on:
      - postgres

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    ports:
      - "8092:8080"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - mongo

  mailer-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    ports:
      - "8093:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: John Smith
      FROM_ADDRESS: john.smith@example.com

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    restart: always
    ports:
      - "8094:8080"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - rabbitmq

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ${HOME}/db-data/postgres:/var/lib/postgresql/data
      # - ./db-data/postgres:/var/lib/postgresql/data

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ${HOME}/db-data/mongo:/data/db
      # - ./db-data/mongo:/data/db

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
    deploy:
      mode: replicated
      replicas: 1
  
  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ${HOME}/db-data/rabbitmq:/var/lib/rabbitmq
      # - ./db-data/rabbitmq:/var/lib/rabbitmq
    # environment:
    #   RABBITMQ_DEFAULT_USER: rabbitmq
    #   RABBITMQ_DEFAULT_PASS: password